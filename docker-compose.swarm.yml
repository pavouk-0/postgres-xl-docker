version: "3.7"
#-----------------------------------------------------------------------------
x-custom:
  shared_env: &shared_env
    PG_GTM_HOST: db_gtm_1
    PG_GTM_PORT: 6666
    PG_HOST: 0.0.0.0
    PG_PORT: 5432
    PG_NODES: "[
    {\"name\":\"coord_1\",\"type\":\"coordinator\",\"host\":\"db_coord_1\",\"port\":5432},
    {\"name\":\"coord_2\",\"type\":\"coordinator\",\"host\":\"db_coord_2\",\"port\":5432},
    {\"name\":\"data_1\",\"type\":\"datanode\",\"host\":\"db_data_1\",\"port\":5432},
    {\"name\":\"data_2\",\"type\":\"datanode\",\"host\":\"db_data_2\",\"port\":5432}
    ]"
    #    PG_CREDENTIALS: "{
    #    \"superuserName\":\"postgres\",
    #    \"superuserPassword\":\"your_password\",
    #    \"replicationName\":\"replication\",
    #    \"replicationPassword\":\"your_replication_password\"
    #    }"
    PG_SECRET_NAME: pg-credentials
  shared_secrets: &shared_secrets
    secrets:
      - pg-credentials

#-----------------------------------------------------------------------------
services:
  db_gtm_1:
    environment:
      PG_HOST: 0.0.0.0
      PG_NODE: gtm_1
      PG_PORT: 6666
    #      PG_CREDENTIALS: "{
    #      \"superuserName\":\"postgres\",
    #      \"superuserPassword\":\"your_password\",
    #      \"replicationName\":\"replication\",
    #      \"replicationPassword\":\"your_replication_password\"
    #      }"
    <<: *shared_secrets
    build: .
    command: docker-cmd-gtm
    entrypoint: docker-entrypoint-gtm
    volumes:
      - db_gtm_1:/var/lib/postgresql
    networks:
      - db_a
  #    healthcheck:
  #      test: ["CMD", "docker-healthcheck-gtm"]
  #      interval: 1m30s
  #      timeout: 10s
  #      retries: 3
  #      start_period: 40s
  db_coord_1:
    environment:
      <<: *shared_env
      PG_NODE: coord_1
    <<: *shared_secrets
    build: .
    command: docker-cmd-coord
    entrypoint: docker-entrypoint-coord
    volumes:
      - db_coord_1:/var/lib/postgresql
    networks:
      - db_a
      - db_b
  #    healthcheck:
  #      test: ["CMD", "docker-healthcheck-coord"]
  #      interval: 1m30s
  #      timeout: 10s
  #      retries: 3
  #      start_period: 40s
  db_coord_2:
    environment:
      <<: *shared_env
      PG_NODE: coord_2
    <<: *shared_secrets
    build: .
    command: docker-cmd-coord
    entrypoint: docker-entrypoint-coord
    volumes:
      - db_coord_2:/var/lib/postgresql
    networks:
      - db_a
      - db_b
  #    healthcheck:
  #      test: ["CMD", "docker-healthcheck-coord"]
  #      interval: 1m30s
  #      timeout: 10s
  #      retries: 3
  #      start_period: 40s
  db_data_1:
    environment:
      <<: *shared_env
      PG_NODE: data_1
    <<: *shared_secrets
    build: .
    command: docker-cmd-data
    entrypoint: docker-entrypoint-data
    volumes:
      - db_data_1:/var/lib/postgresql
    networks:
      - db_a
  #    healthcheck:
  #      test: ["CMD", "docker-healthcheck-data"]
  #      interval: 1m30s
  #      timeout: 10s
  #      retries: 3
  #      start_period: 40s
  db_data_2:
    environment:
      <<: *shared_env
      PG_NODE: data_2
    <<: *shared_secrets
    build: .
    command: docker-cmd-data
    entrypoint: docker-entrypoint-data
    volumes:
      - db_data_2:/var/lib/postgresql
    networks:
      - db_a
#    healthcheck:
#      test: ["CMD", "docker-healthcheck-data"]
#      interval: 1m30s
#      timeout: 10s
#      retries: 3
#      start_period: 40s
#-----------------------------------------------------------------------------
volumes:
  db_gtm_1: {}
  db_coord_1: {}
  db_coord_2: {}
  db_data_1: {}
  db_data_2: {}
networks:
  db_a:
    driver: overlay
    internal: true
  db_b:
    driver: overlay
    internal: true
secrets:
  pg-credentials:
    external: true
